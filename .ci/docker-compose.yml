services:

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=user_accounts
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - config.support_escapes=true
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - dns

  elasticsearch:
    image: elasticsearch:8.15.5
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "10"
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
#      - discovery.seed_hosts=elasticsearch
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - dns

  kibana:
    image: kibana:8.15.5
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    expose:
      - 5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - dns

  logstash:
    user: root
    image: docker.elastic.co/logstash/logstash-oss:7.9.1
    container_name: logstash
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    ports:
      - 5044:5044
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=125
      - PIPELINE_BATCH_DELAY=50
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - logstash_data:/usr/share/logstash/data
      - ./logstash/postgresql-42.6.0.jar:/usr/share/logstash/postgresql-42.6.0.jar
    networks:
      - dns

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - dns

#  server:
#    build:
#      context: ..
#      dockerfile: .ci/Dockerfile
#    container_name: server
#    ports:
#      - 8080:8080
#    depends_on:
#      - postgres
#      - elasticsearch
#    environment:
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_accounts
#      SPRING_ELASTICSEARCH_URIS: elasticsearch:9200
#      SPRING_ELASTICSEARCH_USERNAME: elastic
#      SPRING_ELASTICSEARCH_PASSWORD: elastic
#      SPRING_DATA_REDIS_HOST: redis
#      SPRING_DATA_REDIS_PORT: 6379
#    networks:
#      - dns

volumes:
  pg_data:
  logstash_data:
  elasticsearch_data:
  redis_data:

networks:
  dns:
